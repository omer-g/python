{%- import "generator_macros.j2" as macros with context -%}
{{ macros.header() }}

class {{ exercise | camel_case }}Test(unittest.TestCase):
    {# All test cases in this exercise are nested, so use two for loops -#}
    {% for case in cases -%}
    def test_{{ case["description"] | to_snake }}(self):
        self.assertIs(
            {{ case["property"] | to_snake }}("{{ case["input"]["sentence"].replace('"', '\\"') }}"),
            {{ case["expected"] }}
        )
    {% endfor %}

{{ macros.footer() }}
